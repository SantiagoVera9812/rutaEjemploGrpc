plugins {
    id "com.google.protobuf" version "0.9.4"
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.24.0'
    // https://mvnrepository.com/artifact/io.grpc/grpc-all
    implementation group: 'io.grpc', name: 'grpc-all', version: '1.59.0'

    implementation 'javax.annotation:javax.annotation-api:1.3.2'

}

sourceSets {
    main{
        java{
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}
test {
    useJUnitPlatform()
}

protobuf {

    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.24.4'
    }

    // Locate the codegen plugins
    plugins {
        // Locate a plugin with name 'grpc'. This step is optional.
        // If you leave it empty, it uses the current directory.
        // If you don't specify it, protoc will try to use "protoc-gen-grpc" from
        // system search path.
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.59.0'
            // or
            // path = 'tools/protoc-gen-grpc-java'
        }
        // Any other plugins

    }

    generateProtoTasks {
        all()*.plugins {
            grpc{}
        }
    }

    task runServer(type: JavaExec) {
        dependsOn build

        classpath = files("$project.buildDir/classes/java/main", "$project.buildDir/resources/main")
        main = 'org.example.RouteGuideServer'

        // Add project dependencies to the classpath
        classpath += configurations.runtimeClasspath
    }

    task runClient(type: JavaExec) {
        dependsOn build

        classpath = files("$project.buildDir/classes/java/main", "$project.buildDir/resources/main")
        main = 'org.example.RouteGuideClient'

        // Add project dependencies to the classpath
        classpath += configurations.runtimeClasspath
    }


}